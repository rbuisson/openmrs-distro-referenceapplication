<project>
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.openmrs.distro</groupId>
    <artifactId>openmrs-distro-refapp</artifactId>
    <version>3.0.0-SNAPSHOT</version>
    <relativePath>../../pom.xml</relativePath>
  </parent>

  <artifactId>openmrs-distro-docker</artifactId>
  <name>OpenMRS Docker</name>
  <packaging>pom</packaging>

  <properties>
    <!-- TODO do this in a more sensible way -->
    <openmrsRunDistroTargetDir>distro</openmrsRunDistroTargetDir>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.openmrs</groupId>
      <artifactId>openmrs-distro-package</artifactId>
      <type>zip</type>
      <version>${project.version}</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <version>3.1.0</version>
        <configuration>
          <filesets>
            <fileset>
              <directory>${openmrsRunDistroTargetDir}</directory>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <!-- Unpack OpenMRS distro package -->
          <execution>
            <id>unpack-openmrs-distro-package</id>
            <phase>compile</phase>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <configuration>
              <excludeTransitive>false</excludeTransitive>
              <includeArtifactIds>openmrs-distro-package</includeArtifactIds>
              <outputDirectory>${openmrsRunDistroTargetDir}</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <configuration>
          <images>
            <image>
              <registry>docker.io</registry>
              <name>openmrs/openmrs-reference-application-3-backend</name>
              <build>
                <tags>${docker.tag}</tags>
                <contextDir>${project.basedir}</contextDir>
                <dockerFile>${project.basedir}${file.separator}openmrs${file.separator}Dockerfile-embedded
                </dockerFile>
              </build>
            </image>
            <image>
              <registry>docker.io</registry>
              <name>openmrs/openmrs-reference-application-3-frontend</name>
              <build>
                <tags>${docker.tag}</tags>
                <contextDir>${project.basedir}</contextDir>
                <dockerFile>${project.basedir}${file.separator}ui${file.separator}Dockerfile-embedded</dockerFile>
              </build>
            </image>
            <image>
              <registry>docker.io</registry>
              <name>openmrs/openmrs-reference-application-3-gateway</name>
              <build>
                <tags>${docker.tag}</tags>
                <contextDir>${project.basedir}</contextDir>
                <dockerFile>${project.basedir}${file.separator}proxy${file.separator}Dockerfile-embedded</dockerFile>
              </build>
            </image>
          </images>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>build-docker</id>
      <activation>
        <property>
          <name>release-images</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>build images with embedded configuration</id>
                <phase>compile</phase>
                <goals>
                  <goal>build</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>release-images</id>
      <activation>
        <property>
          <name>release-images</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>push images</id>
                <phase>install</phase>
                <goals>
                  <goal>push</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
